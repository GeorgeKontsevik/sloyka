name: Publish1

on:
  pull_request:
      branches:
        - feature/refactor
  push:
      branches:
        - feature/refactor
  
jobs:
    build:
        # needs: test  # Ensure 'test' job completes successfully
        runs-on: ubuntu-latest

        steps:
          # - name: Check disk usage
          #   run: df -h

          # - name: Clean up disk space
          #   run: sudo rm -rf /tmp/* /var/tmp/*

          - name: Check out repository
            uses: actions/checkout@v3
            # with:
            #     fetch-depth: 1

          - name: Set up Python
            uses: actions/setup-python@v4
            with:
              python-version: '3.11'  # Use the latest Python version or your preferred version for building

          - name: Install env
            run: |
                python -m pip install --upgrade pip
                pip install --upgrade poetry
                poetry self update
                pip install virtualenv filelock
                poetry config virtualenvs.create false
                python -m venv .venv
                source .venv/bin/activate
                poetry env remove $(poetry env list --full-path)

          - name: Cache dependencies
            uses: actions/cache@v3
            with:
              path: |
                ~/.cache/pip
                ~/.cache/pypoetry
              key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock', '**/requirements.txt') }}
              restore-keys: |
                ${{ runner.os }}-pip-
              
          - name: Install dependencies
            run: poetry install

          - name: Build package
            run: poetry build
            env:
                POETRY_VIRTUALENVS_IN_PROJECT: true

          - name: Upload package
            uses: actions/upload-artifact@v4
            with:
              name: built-package
              path: dist/*.whl  # or dist/*.tar.gz depending on your build

    publish:
        needs: build
        runs-on: ubuntu-latest

        steps:
          - name: Check out repository
            uses: actions/checkout@v4

          - name: Set up Python
            uses: actions/setup-python@v4
            with:
              python-version: '3.11'  # Use the same version as used in build

          - name: Download package
            uses: actions/download-artifact@v4
            with:
              name: built-package
              path: ./dist

          - name: Publish to PyPI
            uses: JRubics/poetry-publish@v2.0
            with:
              pypi_token: ${{ secrets.PYPI_TOKEN }}
            env:
              POETRY_VIRTUALENVS_IN_PROJECT: true
