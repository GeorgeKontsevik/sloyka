Search.setIndex({"alltitles": {"Advanced geocoding": [[12, null], [15, null]], "Data getter": [[12, "data-getter"]], "Emotion classifier": [[13, "module-sloyka.src.risks.emotion_classifier"]], "Event detector": [[14, "module-sloyka.src.risks.event_detector"]], "Example": [[13, "example"]], "General:": [[4, null]], "GeoDataGetter": [[5, "geodatagetter"]], "Geocoder": [[6, "geocoder"], [15, "id1"]], "Geocoding": [[15, "geocoding"]], "Graph visualization": [[20, "graph-visualization"]], "Indices and tables": [[4, "indices-and-tables"]], "Installation": [[1, "installation"]], "Introduction": [[2, "introduction"]], "Main features": [[2, "main-features"]], "Main pipeline": [[3, "main-pipeline"]], "OtherGeoObjects": [[7, "othergeoobjects"], [15, "othergeoobjects"]], "Page Not Found": [[0, "page-not-found"]], "Regional activity": [[16, "regional-activity"]], "Semantic graph": [[17, "module-sloyka.src.semantic_graph.semantic_graph_builder"]], "Services extraction": [[11, "services-extraction"]], "StreetExtractor": [[8, "streetextractor"], [15, "streetextractor"]], "Streets": [[9, "streets"]], "Text Classifier": [[18, "text-classifier"]], "Topic Modelling": [[19, "topic-modelling"]], "VKparser": [[10, "vkparser"]], "Welcome to Sloyka\u2019s documentation!": [[4, "welcome-to-sloyka-s-documentation"]], "more:": [[12, "more"], [15, "more"]]}, "docnames": ["404", "about/installation", "about/introduction", "about/pipeline", "index", "modules/GeoDataGetter", "modules/Geocoder_special", "modules/OtherGeoObjects", "modules/StreetExtractor", "modules/Streets", "modules/VKParser", "modules/city_services_extract", "modules/data_getter", "modules/emotion_classifier", "modules/event_dynamic_prediction", "modules/geocoder", "modules/regional_activity", "modules/semantic_graph", "modules/text_classifier", "modules/topic_modeler", "modules/visualize_graph"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["404.rst", "about/installation.rst", "about/introduction.rst", "about/pipeline.rst", "index.rst", "modules/GeoDataGetter.rst", "modules/Geocoder_special.rst", "modules/OtherGeoObjects.rst", "modules/StreetExtractor.rst", "modules/Streets.rst", "modules/VKParser.rst", "modules/city_services_extract.rst", "modules/data_getter.rst", "modules/emotion_classifier.rst", "modules/event_dynamic_prediction.rst", "modules/geocoder.rst", "modules/regional_activity.rst", "modules/semantic_graph.rst", "modules/text_classifier.rst", "modules/topic_modeler.rst", "modules/visualize_graph.rst"], "indexentries": {"assign_street() (sloyka.src.geocoder.geocoder.geocoder method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.assign_street", false]], "build_graph() (sloyka.src.semantic_graph.semantic_graph_builder.semgraph method)": [[17, "sloyka.src.semantic_graph.semantic_graph_builder.Semgraph.build_graph", false]], "calculate_centroid() (sloyka.src.geocoder.city_objects_extractor.othergeoobjects static method)": [[7, "sloyka.src.geocoder.city_objects_extractor.OtherGeoObjects.calculate_centroid", false]], "city_services (class in sloyka.src.utils.data_processing.city_services_extract)": [[11, "sloyka.src.utils.data_processing.city_services_extract.City_services", false]], "classify_text() (sloyka.src.risks.text_classifier.textclassifiers method)": [[18, "sloyka.src.risks.text_classifier.TextClassifiers.classify_text", false]], "convert_df_to_edge_df() (sloyka.src.semantic_graph.semantic_graph_builder.semgraph static method)": [[17, "sloyka.src.semantic_graph.semantic_graph_builder.Semgraph.convert_df_to_edge_df", false]], "create_gdf() (sloyka.src.geocoder.geocoder.geocoder method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.create_gdf", false]], "dir_path (sloyka.src.geocoder.geocoder.geocoder attribute)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.dir_path", false]], "draw_graph_folium() (in module sloyka.src.visual.graph_visualization)": [[20, "sloyka.src.visual.graph_visualization.draw_graph_folium", false]], "emotionrecognizer (class in sloyka.src.risks.emotion_classifier)": [[13, "sloyka.src.risks.emotion_classifier.EmotionRecognizer", false]], "eventdetection (class in sloyka.src.risks.event_detector)": [[14, "sloyka.src.risks.event_detector.EventDetection", false]], "extract_geo_obj() (sloyka.src.geocoder.city_objects_extractor.othergeoobjects static method)": [[7, "sloyka.src.geocoder.city_objects_extractor.OtherGeoObjects.extract_geo_obj", false]], "extract_ner_street() (sloyka.src.geocoder.street_extractor.streetextractor static method)": [[8, "sloyka.src.geocoder.street_extractor.StreetExtractor.extract_ner_street", false]], "extract_toponym() (sloyka.src.geocoder.street_extractor.streetextractor static method)": [[8, "sloyka.src.geocoder.street_extractor.StreetExtractor.extract_toponym", false]], "extraction_services() (sloyka.src.utils.data_processing.city_services_extract.city_services method)": [[11, "sloyka.src.utils.data_processing.city_services_extract.City_services.extraction_services", false]], "extractor (sloyka.src.geocoder.street_extractor.streetextractor attribute)": [[8, "sloyka.src.geocoder.street_extractor.StreetExtractor.extractor", false]], "geocoder (class in sloyka.src.geocoder.geocoder)": [[6, "sloyka.src.geocoder.geocoder.Geocoder", false], [15, "sloyka.src.geocoder.geocoder.Geocoder", false]], "get_and_process_osm_data() (sloyka.src.geocoder.city_objects_extractor.othergeoobjects static method)": [[7, "sloyka.src.geocoder.city_objects_extractor.OtherGeoObjects.get_and_process_osm_data", false]], "get_df_areas() (sloyka.src.geocoder.geocoder.geocoder method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.get_df_areas", false]], "get_level() (sloyka.src.geocoder.geocoder.geocoder static method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.get_level", false]], "get_stem() (sloyka.src.geocoder.geocoder.geocoder static method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.get_stem", false]], "global_crs (sloyka.src.geocoder.geocoder.geocoder attribute)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.global_crs", false]], "initialize_classifier() (sloyka.src.risks.text_classifier.textclassifiers method)": [[18, "sloyka.src.risks.text_classifier.TextClassifiers.initialize_classifier", false]], "match_group_to_area() (sloyka.src.geocoder.geocoder.geocoder method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.match_group_to_area", false]], "merge_to_initial_df() (sloyka.src.geocoder.geocoder.geocoder method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.merge_to_initial_df", false]], "module": [[11, "module-sloyka.src.utils.data_processing.city_services_extract", false], [13, "module-sloyka.src.risks.emotion_classifier", false], [14, "module-sloyka.src.risks.event_detector", false], [17, "module-sloyka.src.semantic_graph.semantic_graph_builder", false], [18, "module-sloyka.src.risks.text_classifier", false], [20, "module-sloyka.src.visual.graph_visualization", false]], "othergeoobjects (class in sloyka.src.geocoder.city_objects_extractor)": [[15, "sloyka.src.geocoder.city_objects_extractor.OtherGeoObjects", false]], "preprocess_area_names() (sloyka.src.geocoder.geocoder.geocoder method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.preprocess_area_names", false]], "preprocess_group_name() (sloyka.src.geocoder.geocoder.geocoder method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.preprocess_group_name", false]], "process_pipeline() (sloyka.src.geocoder.street_extractor.streetextractor static method)": [[8, "sloyka.src.geocoder.street_extractor.StreetExtractor.process_pipeline", false]], "recognize_average_emotion_from_multiple_models() (sloyka.src.risks.emotion_classifier.emotionrecognizer method)": [[13, "sloyka.src.risks.emotion_classifier.EmotionRecognizer.recognize_average_emotion_from_multiple_models", false]], "recognize_emotion() (sloyka.src.risks.emotion_classifier.emotionrecognizer method)": [[13, "sloyka.src.risks.emotion_classifier.EmotionRecognizer.recognize_emotion", false]], "remove_last_letter() (sloyka.src.utils.data_processing.city_services_extract.city_services method)": [[11, "sloyka.src.utils.data_processing.city_services_extract.City_services.remove_last_letter", false]], "replace_with_most_similar() (sloyka.src.utils.data_processing.city_services_extract.city_services method)": [[11, "sloyka.src.utils.data_processing.city_services_extract.City_services.replace_with_most_similar", false]], "restoration_of_normal_form() (sloyka.src.geocoder.city_objects_extractor.othergeoobjects static method)": [[7, "sloyka.src.geocoder.city_objects_extractor.OtherGeoObjects.restoration_of_normal_form", false]], "run() (sloyka.src.geocoder.city_objects_extractor.othergeoobjects static method)": [[15, "sloyka.src.geocoder.city_objects_extractor.OtherGeoObjects.run", false]], "run() (sloyka.src.geocoder.geocoder.geocoder method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.run", false], [15, "sloyka.src.geocoder.geocoder.Geocoder.run", false]], "run() (sloyka.src.risks.event_detector.eventdetection method)": [[14, "sloyka.src.risks.event_detector.EventDetection.run", false]], "run() (sloyka.src.utils.data_processing.city_services_extract.city_services method)": [[11, "sloyka.src.utils.data_processing.city_services_extract.City_services.run", false]], "run_osm_dfs() (sloyka.src.geocoder.city_objects_extractor.othergeoobjects static method)": [[7, "sloyka.src.geocoder.city_objects_extractor.OtherGeoObjects.run_osm_dfs", false]], "run_text_classifier() (sloyka.src.risks.text_classifier.textclassifiers method)": [[18, "sloyka.src.risks.text_classifier.TextClassifiers.run_text_classifier", false]], "run_text_classifier_topics() (sloyka.src.risks.text_classifier.textclassifiers method)": [[18, "sloyka.src.risks.text_classifier.TextClassifiers.run_text_classifier_topics", false]], "semgraph (class in sloyka.src.semantic_graph.semantic_graph_builder)": [[17, "sloyka.src.semantic_graph.semantic_graph_builder.Semgraph", false]], "set_global_repr_point() (sloyka.src.geocoder.geocoder.geocoder method)": [[6, "sloyka.src.geocoder.geocoder.Geocoder.set_global_repr_point", false]], "sloyka.src.risks.emotion_classifier": [[13, "module-sloyka.src.risks.emotion_classifier", false]], "sloyka.src.risks.event_detector": [[14, "module-sloyka.src.risks.event_detector", false]], "sloyka.src.risks.text_classifier": [[18, "module-sloyka.src.risks.text_classifier", false]], "sloyka.src.semantic_graph.semantic_graph_builder": [[17, "module-sloyka.src.semantic_graph.semantic_graph_builder", false]], "sloyka.src.utils.data_processing.city_services_extract": [[11, "module-sloyka.src.utils.data_processing.city_services_extract", false]], "sloyka.src.visual.graph_visualization": [[20, "module-sloyka.src.visual.graph_visualization", false]], "streetextractor (class in sloyka.src.geocoder.street_extractor)": [[8, "sloyka.src.geocoder.street_extractor.StreetExtractor", false], [15, "sloyka.src.geocoder.street_extractor.StreetExtractor", false]], "textclassifiers (class in sloyka.src.risks.text_classifier)": [[18, "sloyka.src.risks.text_classifier.TextClassifiers", false]], "update_graph() (sloyka.src.semantic_graph.semantic_graph_builder.semgraph method)": [[17, "sloyka.src.semantic_graph.semantic_graph_builder.Semgraph.update_graph", false]]}, "objects": {"sloyka.src.geocoder.city_objects_extractor": [[15, 0, 1, "", "OtherGeoObjects"]], "sloyka.src.geocoder.city_objects_extractor.OtherGeoObjects": [[7, 1, 1, "", "calculate_centroid"], [7, 1, 1, "", "extract_geo_obj"], [7, 1, 1, "", "get_and_process_osm_data"], [7, 1, 1, "", "restoration_of_normal_form"], [15, 1, 1, "", "run"], [7, 1, 1, "", "run_osm_dfs"]], "sloyka.src.geocoder.geocoder": [[15, 0, 1, "", "Geocoder"]], "sloyka.src.geocoder.geocoder.Geocoder": [[6, 1, 1, "", "assign_street"], [6, 1, 1, "", "create_gdf"], [6, 2, 1, "", "dir_path"], [6, 1, 1, "", "get_df_areas"], [6, 1, 1, "", "get_level"], [6, 1, 1, "", "get_stem"], [6, 2, 1, "", "global_crs"], [6, 1, 1, "", "match_group_to_area"], [6, 1, 1, "", "merge_to_initial_df"], [6, 1, 1, "", "preprocess_area_names"], [6, 1, 1, "", "preprocess_group_name"], [15, 1, 1, "", "run"], [6, 1, 1, "", "set_global_repr_point"]], "sloyka.src.geocoder.street_extractor": [[15, 0, 1, "", "StreetExtractor"]], "sloyka.src.geocoder.street_extractor.StreetExtractor": [[8, 1, 1, "", "extract_ner_street"], [8, 1, 1, "", "extract_toponym"], [8, 2, 1, "", "extractor"], [8, 1, 1, "", "process_pipeline"]], "sloyka.src.risks": [[13, 3, 0, "-", "emotion_classifier"], [14, 3, 0, "-", "event_detector"], [18, 3, 0, "-", "text_classifier"]], "sloyka.src.risks.emotion_classifier": [[13, 0, 1, "", "EmotionRecognizer"]], "sloyka.src.risks.emotion_classifier.EmotionRecognizer": [[13, 1, 1, "", "recognize_average_emotion_from_multiple_models"], [13, 1, 1, "", "recognize_emotion"]], "sloyka.src.risks.event_detector": [[14, 0, 1, "", "EventDetection"]], "sloyka.src.risks.event_detector.EventDetection": [[14, 1, 1, "", "run"]], "sloyka.src.risks.text_classifier": [[18, 0, 1, "", "TextClassifiers"]], "sloyka.src.risks.text_classifier.TextClassifiers": [[18, 1, 1, "", "classify_text"], [18, 1, 1, "", "initialize_classifier"], [18, 1, 1, "", "run_text_classifier"], [18, 1, 1, "", "run_text_classifier_topics"]], "sloyka.src.semantic_graph": [[17, 3, 0, "-", "semantic_graph_builder"]], "sloyka.src.semantic_graph.semantic_graph_builder": [[17, 0, 1, "", "Semgraph"]], "sloyka.src.semantic_graph.semantic_graph_builder.Semgraph": [[17, 1, 1, "", "build_graph"], [17, 1, 1, "", "convert_df_to_edge_df"], [17, 1, 1, "", "update_graph"]], "sloyka.src.utils.data_processing": [[11, 3, 0, "-", "city_services_extract"]], "sloyka.src.utils.data_processing.city_services_extract": [[11, 0, 1, "", "City_services"]], "sloyka.src.utils.data_processing.city_services_extract.City_services": [[11, 1, 1, "", "extraction_services"], [11, 1, 1, "", "remove_last_letter"], [11, 1, 1, "", "replace_with_most_similar"], [11, 1, 1, "", "run"]], "sloyka.src.visual": [[20, 3, 0, "-", "graph_visualization"]], "sloyka.src.visual.graph_visualization": [[20, 4, 1, "", "draw_graph_folium"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "module", "Python module"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:module", "4": "py:function"}, "terms": {"": [2, 3], "0": [2, 7, 17], "000": 18, "1": [6, 17, 18, 19], "100": [], "131": [], "15": 19, "2": 6, "2024": 2, "3": 6, "4326": 6, "5": [], "50": [], "6": [2, 17], "7": 7, "70": 7, "75": 17, "90": 18, "A": [6, 8, 9, 12, 17], "And": [], "As": 17, "By": 3, "For": 17, "If": 6, "In": 18, "It": [6, 13, 14, 15, 17, 18, 19], "Its": 2, "Not": [], "The": [2, 3, 6, 7, 8, 11, 13, 14, 15, 16, 17, 18, 19, 20], "To": [1, 15], "_collect_popul": 14, "_geocoder_speci": [], "_get_build": 14, "_get_road": 14, "_preprocess": 14, "about": [3, 16, 19], "access": 18, "access_token": [], "accord": 6, "account": 11, "accsess_token": [], "across": 3, "activ": [2, 3], "actual": 6, "ad": 13, "add": 6, "addit": [2, 19], "address": [6, 8, 15], "admin": [6, 15], "after": [2, 6, 15, 16, 17], "against": 6, "aggreg": [16, 17], "aggregate_data": 17, "aim": [2, 14, 17, 18, 19], "algorithm": 11, "all": [3, 6], "alreadi": [2, 3, 6], "also": [2, 6, 15], "amen": 18, "an": [6, 7, 13, 14, 15, 20], "analyz": [4, 13], "ani": [3, 6, 13, 17, 19], "api": [], "api_verison": [], "appdata": [], "appli": [3, 8, 13], "applic": [14, 17], "ar": [3, 6, 15, 17], "area": [3, 6, 15], "area_nam": 6, "area_name_process": 6, "area_stem": 6, "around": 8, "arrai": 7, "assess": [2, 3], "assign": [6, 15], "assign_street": 6, "attribut": [6, 13, 16, 17, 18], "augment": 2, "authent": [], "autoclass": 9, "autom": [], "automat": 13, "automodul": [], "avail": 13, "averag": 13, "avoid": 20, "back": [6, 13], "base": [5, 12, 14, 16, 17, 18], "basic": 16, "being": 18, "belong": 19, "below": 8, "bert": [17, 18], "bert_larg": 13, "bert_nam": 17, "bertop": [14, 19], "best": [6, 15], "between": [14, 17], "bool": 17, "box": 0, "build": [2, 14, 17], "build_graph": 17, "c": [], "cach": 6, "calcul": [7, 13], "calculate_centroid": 7, "call": [16, 18], "can": [2, 3, 13, 16], "care": 18, "carri": 3, "case": [3, 17, 18], "categor": 2, "categori": [13, 18], "categoris": 13, "centroid": [6, 7], "certain": 3, "chang": 11, "charact": 6, "character": 3, "chat": 2, "check": 6, "child": 17, "citi": [2, 4, 6, 11, 14, 18, 19], "citizen": 2, "city_cr": 14, "city_nam": 14, "city_objects_extractor": 15, "city_servic": 11, "city_services_extract": [11, 16], "city_tag": [6, 15], "class": [5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19], "classif": [15, 18], "classifi": [2, 3, 8, 16], "classify_text": 18, "clean": 17, "clean_from_digit": 17, "clean_from_dubl": 17, "clean_from_toponym": 17, "cluster": [14, 19, 20], "code": 6, "cointegr": 19, "collect": [2, 7, 14], "color": 20, "column": [2, 3, 6, 11, 13, 15, 17], "combin": 7, "comment": 2, "comments_to_datafram": [], "commun": [2, 3], "compar": 7, "comparison": 11, "compat": 13, "comprehens": [], "confid": 8, "connect": 14, "consist": 3, "construct": [2, 17], "contain": [6, 8, 12, 13, 14, 17, 18], "content": 8, "context": 14, "conveni": 17, "convert": 6, "convert_df_to_edge_df": 17, "convini": 17, "correctli": 18, "correspond": [6, 15], "cosin": 17, "couldn": 0, "count": [17, 18], "count_item": [], "counts_attribut": 17, "cpu": [6, 13, 15, 17], "creat": [6, 15, 16, 17, 19], "create_gdf": 6, "csv": 13, "cuda": 13, "custom": 8, "cutoff": [], "cutoff_d": [], "d": [], "dai": 19, "data": [2, 3, 4, 5, 6, 7, 9, 13, 14, 15, 16, 17, 19], "data_gett": 9, "data_process": 11, "datafram": [6, 7, 8, 11, 13, 15, 16, 17], "dataset": 3, "date": [2, 6, 15, 19], "deeppavlov": 17, "default": [6, 13, 15, 17, 20], "design": [11, 13, 16, 18, 19], "detector": [], "determin": 17, "devic": [6, 13, 15, 17, 18], "device_typ": 18, "df": [6, 8, 11, 13, 15], "df_area": 6, "dict": [6, 7, 15], "dictionari": 6, "didn": 6, "differ": [6, 7], "digit": [2, 17], "dir_path": 6, "direct": 17, "displai": 20, "distanc": 17, "divid": 3, "do": 15, "document": [2, 6], "domain": [], "don": 6, "done": 19, "draw_graph_folium": 20, "duplic": 17, "dure": 13, "dynam": 19, "each": [3, 6, 14, 15, 17, 19, 20], "effici": 18, "element": [2, 6], "embed": [17, 19], "embedding_model_nam": 19, "emot": [2, 3], "emotion_classifi": [13, 16], "emotionclassifi": 13, "emotionrecogn": 13, "empti": [], "enabl": 13, "end": 11, "end_dat": 19, "enrich": 2, "entiti": [2, 7, 11], "environ": 2, "evalu": 2, "event": [2, 18], "event_detector": 14, "eventdetect": 14, "exampl": 18, "exist": 2, "extract": [2, 3, 7, 8, 15, 17, 19], "extract_building_num": [], "extract_geo_obj": 7, "extract_ner_street": 8, "extract_toponym": 8, "extraction_servic": 11, "extractor": [6, 8, 15], "fail": 8, "fall": 13, "fals": [6, 15, 18], "famili": 18, "featur": [], "fetch": [], "file": 20, "filepath_to_popul": 14, "filter": [6, 15, 17], "final": [2, 6, 15, 17], "find": [0, 6, 7, 15], "finder": [], "first": [6, 8], "flag": 17, "flair": [6, 11, 15], "float": 17, "folium": 20, "follow": [13, 14, 17, 18, 19], "footprint": 2, "forecast": 3, "form": [6, 7, 15], "format": [], "found": [6, 8], "from": [2, 5, 6, 7, 8, 11, 12, 15, 17, 19, 20], "function": [3, 6, 7, 8, 15, 16, 17, 18, 19, 20], "further": [2, 3], "g": 17, "gdf": [6, 19], "gener": [2, 3, 14, 15], "geo": [], "geocod": [3, 8, 16, 17], "geodatafram": [2, 6, 14, 15, 16, 17, 19], "geodatagett": 12, "geograph": [6, 15], "geoloc": [3, 17], "geometri": [6, 7, 17], "geometry_column": 17, "geor111i": [6, 15], "geospati": [5, 12], "get": [2, 3, 14], "get_and_process_osm_data": 7, "get_com": [], "get_df_area": 6, "get_group_nam": [], "get_group_post_id": [], "get_level": 6, "get_owner_id_by_domain": [], "get_risk": 16, "get_stem": 6, "get_subcom": [], "getter": 3, "given": [5, 6, 12, 13, 15, 17, 20], "global": [6, 19], "global_cr": 6, "go": 0, "gpd": [6, 15, 17], "gpu": 13, "graph": [2, 3], "graph_path": 20, "graph_visu": 20, "graphml": 20, "group": [3, 6, 15, 20], "group_column": [6, 15], "group_nam": [6, 15], "ha": [13, 14, 17, 18, 19], "have": 20, "health": 18, "histgeodatagett": 6, "hold": 13, "homepag": 0, "hous": [6, 18], "howev": 3, "http": 2, "huggingfac": [13, 18], "huggingfacemodel": 13, "hypergraph": 2, "i": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 16, 17, 18, 19], "id": [5, 6, 12, 15, 18], "id_column": 17, "ident": 4, "identifi": [8, 17, 18, 19], "import": 3, "includ": 16, "incom": 19, "index": 4, "indic": 17, "inf": [], "infer": [13, 17], "infin": [], "info": [3, 6], "inform": [16, 17], "initi": [6, 16, 18], "initial_df": 6, "initialize_classifi": 18, "input": [6, 8, 13, 15, 17, 18], "instal": 4, "instanti": 13, "int": [6, 7, 14, 15, 17, 18], "interact": 20, "interpret": 2, "introduct": 4, "is_top": 18, "its": 20, "june": 2, "keep": 6, "kei": 17, "key_score_filt": 17, "keybert": 17, "keyword": 17, "know": 6, "label": 3, "languag": 17, "last": 3, "launch": 15, "least": 7, "level": [6, 15, 18], "librari": [2, 3, 4, 7, 11, 17], "like": 13, "limit": 3, "linear": 15, "link": [2, 14], "list": [3, 7, 11], "locat": [2, 7, 17], "location_column": 17, "logistic_regress": [], "low": 18, "lowercas": 6, "m": [], "machin": 2, "mai": 19, "main": [4, 17, 18, 19], "major": 3, "mani": 18, "map": 20, "mark": 18, "marker": 20, "markerclust": 20, "match": [6, 15, 17], "match_group_to_area": 6, "maximum": [], "me": 2, "media": [2, 4], "member": 9, "mention": [2, 3, 8], "meow": [], "merg": [6, 15, 19], "merge_to_initial_df": 6, "messag": [2, 3, 6, 11, 14, 17, 18, 19], "method": [2, 3, 11, 13, 14, 17, 18, 19], "min_event_s": 14, "min_text": 19, "model": [2, 3, 6, 8, 13, 14, 15, 17, 18], "model_nam": 13, "model_path": [6, 15], "modul": [2, 4, 12, 13, 14, 15, 16, 17, 18, 19], "more": [3, 17], "most": [11, 13], "multipl": 13, "name": [6, 8, 11, 13, 15, 17, 20], "natasha": 7, "natashaextractor": 8, "ner": [6, 8, 15], "network": [2, 3, 12, 14], "new": [2, 11, 17], "node": [2, 17, 20], "none": [6, 8, 13, 15, 17, 18, 20], "normal": 7, "number": [6, 17, 18], "number_of_categori": 18, "number_of_messag": [], "nx": 17, "object": [2, 3, 6, 7, 8, 11, 14, 15, 18, 20], "obtain": [2, 3, 17], "offset": 20, "one": 7, "onli": [3, 6], "onlin": 3, "openstreetmap": [5, 6, 12], "option": [6, 8, 15, 20], "order": [3, 6], "origin": [6, 11], "osm": [5, 6, 7, 12, 15], "osm_combined_df": 7, "osm_id": [6, 7, 15], "other": [6, 13, 15, 16, 18], "other_geo_obj": 7, "otherwis": [3, 6, 8, 13], "out": [3, 6], "output_fil": 20, "overlap": 20, "own": 20, "owner": [], "owner_id": [], "packag": [], "page": 4, "panda": [], "param": 17, "paramet": [6, 8, 15, 17, 20], "parent": 17, "parents_stack_column": 17, "pars": 2, "parser": [], "particular": 2, "path": 20, "pd": [6, 8, 13, 15, 17], "per": 18, "percentag": 7, "perform": 15, "perisiqu": [], "pip": 1, "pipelin": [4, 6, 15, 18], "place": [2, 6, 15, 17], "point": [6, 7], "polygon": 7, "popul": 14, "posit": 8, "possibl": 3, "post": [2, 17, 19], "post_id": [], "post_id_column": 17, "post_num_limit": [], "pre": [8, 18], "predict": [2, 18], "preprocess": [6, 14, 15], "preprocess_area_nam": 6, "preprocess_group_nam": 6, "present": 8, "prevail": 13, "previous": [], "probabl": [11, 18], "process": [2, 6, 7, 8, 15, 16, 18, 19], "process_pipelin": 8, "process_top": 19, "processed_geodata": 16, "provid": [2, 6, 15, 16, 17], "proxim": 17, "public": 18, "python": [], "python311": [], "pytorch": 17, "qualiti": 2, "random": 20, "rang": [8, 19], "read_csv": 13, "receiv": [2, 3], "recogn": [6, 13], "recognis": 6, "recognit": [2, 13], "recognize_average_emotion_from_multiple_model": 13, "recognize_emot": 13, "refer": 17, "regard": 2, "region": [2, 3], "regional_act": 16, "regionalact": 16, "relat": [8, 15], "relationship": 17, "remov": [6, 8, 17], "remove_last_lett": 11, "replace_with_most_similar": 11, "repli": 2, "repositori": 18, "repository_id": 18, "repres": [6, 20], "request": [], "requir": 3, "restoration_of_normal_form": 7, "result": [2, 17, 19, 20], "retriev": [5, 6, 7, 12, 15], "return": [6, 7, 8, 13, 14, 15, 16, 17, 18, 20], "risk": [2, 3, 13, 14, 16, 18], "road": 14, "roadmap": 4, "roam": [], "row": 6, "rubert": [17, 18, 19], "run": [1, 3, 6, 11, 14, 15], "run_com": [], "run_osm_df": 7, "run_pars": [], "run_post": [], "run_text_classifi": 18, "run_text_classifier_top": 18, "russian": [17, 18], "save": 20, "scale": 6, "score": [8, 17], "search": [0, 4, 8], "search_for_object": [6, 15], "section": 3, "see": 15, "select": [3, 13], "semant": [2, 3, 14], "semantic_graph": 17, "semantic_graph_build": 17, "semantic_score_filt": 17, "semgraph": 17, "sentenc": 11, "seri": [6, 8], "servic": [2, 3], "set": [6, 13, 17], "set_global_repr_point": 6, "similar": 7, "simpl": [6, 15], "simpli": 6, "site": 3, "size": [], "skip": 3, "sloyka": [1, 2, 3, 6, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20], "sloyka_commun": 2, "so": 18, "social": [2, 3, 4, 12, 16], "some": [3, 19], "sorri": 0, "sourc": [6, 7, 8, 11, 13, 14, 15, 17, 18, 20], "spatial": [2, 7, 14], "special": 6, "specif": 18, "specifi": [6, 8, 17, 18, 19], "src": [6, 8, 9, 11, 13, 14, 15, 17, 18, 20], "stage": 2, "start_dat": 19, "state": [6, 15], "static": [6, 7, 8, 15, 17], "stem": 6, "step": 3, "stop": [], "stopword": 6, "store": [11, 16, 19], "str": [6, 7, 8, 14, 15, 17, 18, 20], "street": [6, 8, 12, 14, 15], "street_extractor": [8, 15], "street_nam": 8, "street_names_df": 6, "string": 11, "structur": 18, "subcom": [], "success": [], "synthesi": 3, "synthet": 18, "t": [0, 2, 6], "tag": [2, 3, 5, 6, 7, 12, 15], "take": [11, 18], "target_text": 14, "test": 6, "text": [2, 3, 6, 7, 8, 11, 13, 14, 15, 16, 17, 19], "text_address_extractor_by_rul": 8, "text_classifi": 18, "text_column": [6, 8, 11, 13, 15, 17], "text_type_column": 17, "textclassifi": 18, "textual": 2, "thank": 17, "thei": 3, "them": [2, 6, 7, 11], "theme": 18, "thi": [3, 5, 6, 7, 8, 12, 13, 14, 15, 17, 18], "those": 6, "three": 18, "threshold": [7, 8, 17], "timeout_limit": [], "tini": 18, "tiny2": [18, 19], "token": 18, "too": 18, "top": 17, "top_n": 17, "topic": [2, 3], "topicmodel": 19, "toponym": [8, 17], "toponym_column": 17, "toponym_name_column": 17, "toponym_type_column": 17, "train": [6, 8, 13, 18], "transform": [13, 18], "transport": 18, "true": [13, 17], "try": 0, "tupl": 6, "two": 2, "type": [6, 8, 11, 12, 15, 17, 18, 20], "undoc": 9, "uniqu": 17, "unknown_\u0436\u043a\u0445": 18, "unnecessari": 8, "up": 18, "updat": 17, "update_graph": 17, "upper": 18, "urban": [2, 3, 7, 14, 15, 18], "us": [0, 2, 4, 5, 7, 8, 11, 12, 13, 16, 17, 18, 19, 20], "user": [6, 16], "util": [9, 11, 18], "variou": 12, "veri": 3, "vernacular": 2, "version": 2, "visual": [2, 3], "vk": 12, "vk_data_gett": [], "vkontakt": 12, "vkparser": 12, "wa": 18, "wai": 6, "we": [0, 6], "well": [2, 11, 12], "were": [3, 18], "weren": 6, "where": 6, "which": [2, 3, 13, 14, 16, 17, 18, 19, 20], "whose": [], "wide": 19, "within": [2, 8], "word": [6, 15, 17], "word_info_column": 17, "words_scor": 17, "work": [9, 12], "y": [], "you": 3}, "titles": ["Page Not Found", "Installation", "Introduction", "Main pipeline", "Welcome to Sloyka\u2019s documentation!", "GeoDataGetter", "Geocoder", "OtherGeoObjects", "StreetExtractor", "Streets", "VKparser", "Services extraction", "Data getter", "Emotion classifier", "Event detector", "Geocoding", "Regional activity", "Semantic graph", "Text Classifier", "Topic Modelling", "Graph visualization"], "titleterms": {"": 4, "Not": 0, "about": [], "activ": 16, "advanc": [12, 15], "class": [], "classifi": [13, 18], "data": 12, "detector": 14, "document": 4, "emot": 13, "event": 14, "exampl": 13, "extract": 11, "featur": 2, "finder": [], "found": 0, "function": [], "gener": 4, "geo": [], "geocod": [6, 12, 15], "geodatagett": 5, "getter": 12, "graph": [17, 20], "indic": 4, "inner": [], "instal": 1, "introduct": 2, "main": [2, 3], "model": 19, "more": [12, 15], "object": [], "othergeoobject": [7, 15], "page": 0, "pipelin": 3, "receiv": [], "region": 16, "semant": 17, "servic": 11, "sloyka": 4, "street": 9, "streetextractor": [8, 15], "tabl": 4, "tag": [], "text": 18, "topic": 19, "visual": 20, "vkparser": 10, "welcom": 4, "work": []}})